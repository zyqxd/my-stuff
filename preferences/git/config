[user]
  name = David Zhang
  email = zyq.david@gmail.com
[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f
[core]
	excludesfile = /Users/zyqxd/.gitignore
	editor = 'vim'
[alias]
  ##
  # Source: https://github.com/GitAlias/gitalias/blob/master/gitalias.txt
  # Guidelines: these aliases do not use options, because we want
  # these aliases to be easy to compose and use in many ways.
  ##

  ### add ###

  a = add
  aa = add --all
  ap = add --patch
  au = add --update

  ### branch ###

  b = branch
  bd = branch -D

  ### checkout ###

  c = checkout
  co = checkout
  cob = checkout-branch 
  n = checkout -b

  ### cherry-pick ###

  cp = cherry-pick

  ### clean ###

  cleanest = clean -ffdx

  ### commit ###

  c = commit
  cm = commit --message
  ca = commit --amend
  cam = commit --amend --message

  ### diff ###

  d = diff
  dc = diff --cached
  ds = diff --staged
  dw = diff --word-diff

  ### log ###

  l = log --graph --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -n 10
  last = log -1 HEAD
  tree = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

  ### push ###

  p = push
  po = "!git push --set-upstream origin $(git branch-name)"
  pf = push --force
  ### rebase ###

  rb = rebase
  rba = rebase --abort
  rbi = rebase --interactive
  rbc = rebase --continue
  rbs = rebase --skip
  squash = "!f(){ \
    git rebase -i HEAD~\"$1\"; \
  };f"
  rbap = !"git squash 2"

  ### reflog ###
  rf = reflog --format='%C(blue)%h%C(reset) %C(magenta)%s%C(reset) %C(green)%cr%C(reset) %C(yellow)%D%C(reset) %n>>> %gs'

  ### reset ###

  unstage = reset HEAD --
  pop = reset head^

  ### show ###

  sh = show --pretty=''
  sf = show --pretty='' --name-only

  ### status ###

  s = status -s

  ### reset ###
  
  r = reset

  ### assumes ###

  assume   = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assume-all = "!git st -s | awk {'print $2'} | xargs git assume"
  unassume-all = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumed  = !"git ls-files -v | grep ^h | cut -c 3-"

  ### workflow and customs ###

  aliases = "!git config --get-regexp '^alias\\.' | sed 's/ / \t\t= /'"
  branch-name = rev-parse --abbrev-ref HEAD

  switch = "!f(){ \
    if [ ! -f .git-switch.lock ]; then \
      switch_branch=\"$1\"; \
      current_branch=\"$(git branch-name)\"; \
      git aa; \
      git stash; \
      git co \"$switch_branch\"; \
      echo \"$current_branch\" > .git-switch.lock; \
    else \
      echo Switch already lock exists!; \
    fi \
  };f"
q
  unswitch = "!f(){ \
    if [ -f .git-switch.lock ]; then \
      switch_branch=\"$(cat .git-switch.lock)\"; \
      git co \"$switch_branch\"; \
      git stash pop; \
      rm .git-switch.lock; \
    else \
      echo Switch lock does not exist!; \
    fi \
  };f"

  update = "!f(){ \
    git aa; \
    git stash; \
    git co master; \
    git pull; \
    git co -; \
    git rebase -; \
    git stash pop; \
  };f"

[pull]
	ff = only
[merge]
	renameLimit = 999999
